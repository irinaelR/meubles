drop database projetmeuble;
create database projetmeuble;
\c projetmeuble;
create table categorie(
    idCategorie serial primary key , 
    nomCategorie varchar(50)
);
insert into categorie(nomCategorie) values('chaise');
insert into categorie(nomCategorie) values('table');

create table Matiere(
    idMatiere serial primary key , 
    nomMatiere varchar(50)
);
insert into matiere(nomMatiere) values('hazo');
insert into matiere(nomMatiere) values('lamba');

create table style(
    idStyle serial primary key , 
    nomStyle varchar(50)    
);
insert into style(nomStyle) values('Royale');
insert into style(nomStyle) values('Boeme');

create table matiereParStyle(
    idMatiereParStyle serial primary key , 
    idStyle int not null , 
    idMatiere int not null ,
    foreign key(idStyle) references style(idStyle),
    foreign key(idMatiere) references matiere(idMatiere)
);

INSERT INTO MATIEREPARSTYLE(IDSTYLE, IDMATIERE) VALUES (1, 1);
INSERT INTO MATIEREPARSTYLE(IDSTYLE, IDMATIERE) VALUES (1, 2);

CREATE OR REPLACE VIEW STYLEAVECMATIERE AS (
    SELECT STYLE.IDSTYLE AS IDSTYLE, MATIERE.IDMATIERE AS IDMATIERE,
    STYLE.NOMSTYLE AS NOMSTYLE, MATIERE.NOMMATIERE AS NOMMATIERE
    FROM MATIERE JOIN MATIEREPARSTYLE ON MATIERE.IDMATIERE=MATIEREPARSTYLE.IDMATIERE
                 JOIN STYLE ON MATIEREPARSTYLE.IDSTYLE=STYLE.IDSTYLE
);


CREATE TABLE VOLUME (
    IDVOLUME SERIAL PRIMARY KEY,
    NOMVOLUME VARCHAR(50)
);

INSERT INTO VOLUME VALUES(DEFAULT, 'GM');

CREATE TABLE TAILLEPARCATEGORIEPARSTYLE (
    IDTCS SERIAL PRIMARY KEY,
    IDCATEGORIE INT NOT NULL,
    IDSTYLE INT NOT NULL,
    IDVOLUME INT NOT NULL,
    FOREIGN KEY (IDCATEGORIE) REFERENCES CATEGORIE(IDCATEGORIE),
    FOREIGN KEY (IDSTYLE) REFERENCES STYLE(IDSTYLE),
    FOREIGN KEY (IDVOLUME) REFERENCES VOLUME(IDVOLUME) 
); 

INSERT INTO TAILLEPARCATEGORIEPARSTYLE VALUES (DEFAULT, 1, 1, 1);
INSERT INTO TAILLEPARCATEGORIEPARSTYLE VALUES (DEFAULT, 1, 2, 1);


CREATE TABLE FORMULEFABRICATION(
    IDTC INT NOT NULL,
    IDMATIERE INT NOT NULL,
    QUANTITE DOUBLE PRECISION NOT NULL,
    FOREIGN KEY (IDTC) REFERENCES TAILLEPARCATEGORIEPARSTYLE(IDTCS),
    FOREIGN KEY (IDMATIERE) REFERENCES MATIERE(IDMATIERE)
);

INSERT INTO FORMULEFABRICATION VALUES
    (1, 1, 3),
    (1, 2, 2),
    (2, 1, 2),
    (2, 2, 2);

CREATE OR REPLACE VIEW FORMULEAVECSTYLECATEGORIE AS (
    SELECT
        TAILLEPARCATEGORIEPARSTYLE.IDTCS,TAILLEPARCATEGORIEPARSTYLE.IDCATEGORIE, TAILLEPARCATEGORIEPARSTYLE.IDSTYLE, TAILLEPARCATEGORIEPARSTYLE.IDVOLUME,
        CATEGORIE.NOMCATEGORIE, STYLE.NOMSTYLE, MATIERE.NOMMATIERE,
        FORMULEFABRICATION.IDMATIERE, FORMULEFABRICATION.QUANTITE , VOLUME.NOMVOLUME
        FROM FORMULEFABRICATION 
        JOIN TAILLEPARCATEGORIEPARSTYLE ON FORMULEFABRICATION.IDTC = TAILLEPARCATEGORIEPARSTYLE.IDTCS
        JOIN CATEGORIE ON TAILLEPARCATEGORIEPARSTYLE.IDCATEGORIE = CATEGORIE.IDCATEGORIE
        JOIN STYLE ON STYLE.IDSTYLE = TAILLEPARCATEGORIEPARSTYLE.IDSTYLE
        JOIN MATIERE ON MATIERE.IDMATIERE = FORMULEFABRICATION.IDMATIERE
        JOIN VOLUME ON TAILLEPARCATEGORIEparstyle.IDVOLUME = VOLUME.IDVOLUME
);

CREATE TABLE PRIXMATERIEL (
    IDPRIX SERIAL PRIMARY KEY,
    DATEPRIX DATE DEFAULT(CURRENT_TIMESTAMP),
    IDMATIERE INT NOT NULL,
    PRIX DOUBLE PRECISION,
    FOREIGN KEY(IDMATIERE) REFERENCES MATIERE(IDMATIERE)
);

INSERT INTO PRIXMATERIEL VALUES
    (DEFAULT, DEFAULT, 1, 5000),
    (DEFAULT, DEFAULT, 2, 3500);

SELECT
    FORMULEAVECSTYLECATEGORIE.*, PRIX
    FROM FORMULEAVECSTYLECATEGORIE
    JOIN PRIXMATERIEL ON FORMULEAVECSTYLECATEGORIE.IDMATIERE = PRIXMATERIEL.IDMATIERE;

CREATE OR REPLACE VIEW MEUBLEAVECPRIXMATERIEL AS (
    SELECT
        PRIX, IDCATEGORIE, IDSTYLE, IDVOLUME,
        NOMCATEGORIE, NOMSTYLE, NOMMATIERE,
        FORMULEAVECSTYLECATEGORIE.IDMATIERE, QUANTITE , NOMVOLUME
        FROM FORMULEAVECSTYLECATEGORIE
        JOIN PRIXMATERIEL ON FORMULEAVECSTYLECATEGORIE.IDMATIERE = PRIXMATERIEL.IDMATIERE
);

CREATE OR REPLACE VIEW COUTMEUBLE AS (
    SELECT 
        SUM(PRIX*QUANTITE) AS COUT, IDCATEGORIE, IDSTYLE, IDVOLUME, NOMCATEGORIE, NOMSTYLE, NOMVOLUME
        FROM MEUBLEAVECPRIXMATERIEL
        GROUP BY IDCATEGORIE, IDSTYLE, IDVOLUME, NOMCATEGORIE, NOMSTYLE, NOMVOLUME
);

CREATE OR REPLACE VIEW PRODUIT AS (
    SELECT
        TAILLEPARCATEGORIEPARSTYLE.IDTCS,TAILLEPARCATEGORIEPARSTYLE.IDSTYLE, TAILLEPARCATEGORIEPARSTYLE.IDCATEGORIE, TAILLEPARCATEGORIEPARSTYLE.IDVOLUME,
        STYLE.NOMSTYLE, CATEGORIE.NOMCATEGORIE, VOLUME.NOMVOLUME
    FROM
        TAILLEPARCATEGORIEPARSTYLE JOIN STYLE
            ON TAILLEPARCATEGORIEPARSTYLE.IDSTYLE = STYLE.IDSTYLE
        JOIN CATEGORIE
            ON CATEGORIE.IDCATEGORIE = TAILLEPARCATEGORIEPARSTYLE.IDCATEGORIE
        JOIN VOLUME
            ON VOLUME.IDVOLUME = TAILLEPARCATEGORIEPARSTYLE.IDVOLUME
);

CREATE TABLE COMMANDE (
    IDCOMMANDE SERIAL PRIMARY KEY,
    IDPRODUIT INT NOT NULL,
    QUANTITEPRODUIT INT NOT NULL,
    FOREIGN KEY(IDPRODUIT) REFERENCES TAILLEPARCATEGORIEPARSTYLE(IDTCS)
);  

CREATE TABLE MOUVEMENTSTOCK (
    IDMOUVEMENT SERIAL PRIMARY KEY,
    IDMATIERE INT NOT NULL,
    ENTREE INT DEFAULT 0,
    SORTIE INT DEFAULT 0,
    DATEMOUV DATE DEFAULT CURRENT_TIMESTAMP
);

INSERT INTO MOUVEMENTSTOCK VALUES
    (DEFAULT, 1, 200, DEFAULT, '2023-12-22'),    
    (DEFAULT, 1, 400, 50, '2023-12-31'),
    (DEFAULT, 2, 150, DEFAULT, '2024-01-01');


CREATE OR REPLACE VIEW RESTESTOCK AS (
    SELECT 
        MOUVEMENTSTOCK.IDMATIERE, MATIERE.NOMMATIERE, SUM(ENTREE)-SUM(SORTIE) AS RESTE
        FROM MOUVEMENTSTOCK JOIN MATIERE
            ON MOUVEMENTSTOCK.IDMATIERE = MATIERE.IDMATIERE
        GROUP BY MOUVEMENTSTOCK.IDMATIERE, MATIERE.NOMMATIERE
);

CREATE TABLE TypeEmploye (
    ID SERIAL PRIMARY KEY,
    NOMEMPLOYE VARCHAR(75)
);

INSERT INTO TypeEmploye VALUES
    (DEFAULT, 'EMP1'), (DEFAULT, 'EMP2'), (DEFAULT, 'EMP3');

CREATE TABLE SalaireParHeure (
    IDSPH SERIAL PRIMARY KEY,
    IDTYPEEMPLOYE INT,
    VALEUR DOUBLE PRECISION,
    FOREIGN KEY (IDTYPEEMPLOYE) REFERENCES TYPEEMPLOYE (ID)
);

INSERT INTO SalaireParHeure VALUES
    (DEFAULT, 1, 25000),
    (DEFAULT, 2, 15000),
    (DEFAULT, 3, 22500);

CREATE TABLE NOMBREPERSONNEPARTAILLE (
    IDNBPERS SERIAL PRIMARY KEY,
    IDTAILLE INT,
    NBPERS INT,
    FOREIGN KEY(IDTAILLE) REFERENCES VOLUME(IDVOLUME)
);

INSERT INTO NOMBREPERSONNEPARTAILLE VALUES
    (DEFAULT, 1, 3);

CREATE TABLE TYPEPERSONNEPARTAILLE (
    IDTYPEPERS SERIAL PRIMARY KEY,
    IDTAILLE INT,
    IDEMP INT,
    NB INT,
    FOREIGN KEY(IDTAILLE) REFERENCES VOLUME(IDVOLUME),
    FOREIGN KEY(IDEMP) REFERENCES TYPEEMPLOYE(ID)
);

INSERT INTO TYPEPERSONNEPARTAILLE VALUES
    (DEFAULT, 1, 1, 1),
    (DEFAULT, 1, 2, 2);

CREATE TABLE NBHORAIREPARSTYLE (
    IDNBH SERIAL PRIMARY KEY,
    IDSTYLE INT,
    NBHEURES DOUBLE PRECISION,
    FOREIGN KEY(idstyle) REFERENCES style(IDSTYLE)

);

INSERT INTO NBHORAIREPARSTYLE VALUES 
    (DEFAULT, 1, 12),
    (DEFAULT, 1, 10);

CREATE TABLE PRIXVENTEPRODUIT(
    IDPRIXPRODUIT SERIAL PRIMARY KEY,
    IDPRODUIT INT,
    PRIXVENTE DOUBLE PRECISION,
    DATEPV DATE,
    FOREIGN KEY(IDPRODUIT) REFERENCES TAILLEPARCATEGORIEPARSTYLE(IDTCS)

);

INSERT INTO PRIXVENTEPRODUIT VALUES 
    (DEFAULT, 1, 14500, CURRENT_TIMESTAMP),
    (DEFAULT, 2, 20000, CURRENT_TIMESTAMP);

CREATE OR REPLACE VIEW PRIXMAINDOEUVREPARTAILLE AS (

    SELECT
        TYPEPERSONNEPARTAILLE.IDTAILLE, SUM(TYPEPERSONNEPARTAILLE.NB*VALEUR) AS PRIXMAINDOEUVRE
        FROM
        TYPEPERSONNEPARTAILLE JOIN SalaireParHeure
            ON TYPEPERSONNEPARTAILLE.IDEMP = SalaireParHeure.IDTYPEEMPLOYE
        GROUP BY TYPEPERSONNEPARTAILLE.IDTAILLE
);